{
    "axes": {
        "base": {
            "dateFormat": "%Y",
            "format": {
                "double": {
                    "customTicks": [],
                    "dateString": "Y",
                    "frequency": 4,
                    "ticks": 7
                },
                "single": {
                    "customTicks": [],
                    "dateString": "Y",
                    "frequency": 7,
                    "ticks": 7
                }
            },
            "label": "",
            "max": null,
            "min": null,
            "prefix": "",
            "shadedRegions": [],
            "suffix": "",
            "type": "date"
        },
        "color": {
            "byFacet": false,
            "domain": [
                "crude price",
                "crude price (inflation adjusted)",
                "crude price (inflation and intensity adjusted)"
            ],
            "ignoreScale": false,
            "quantize": false,
            "quantizeProps": {
                "column": null,
                "groups": 0,
                "reverseColors": false
            },
            "range": [
                "#A7A7A7",
                "#7A7A7A",
                "#D40A06"
            ],
            "scheme": "categorical.default"
        },
        "scale": {
            "prefix": "",
            "suffix": ""
        },
        "value": {
            "format": {
                "double": {
                    "customTicks": [],
                    "ticks": 7
                },
                "single": {
                    "customTicks": [],
                    "ticks": 7
                }
            },
            "label": "WTI crude oil, barrel",
            "max": 130,
            "min": null,
            "prefix": "$",
            "shadedRegions": [],
            "suffix": ""
        }
    },
    "data": [
        {
            "crude price": 1.8,
            "crude price (inflation adjusted)": 10.98,
            "crude price (inflation and intensity adjusted)": 10.98,
            "year": 1970
        },
        {
            "crude price": 2.24,
            "crude price (inflation adjusted)": 13.09,
            "crude price (inflation and intensity adjusted)": 13.11,
            "year": 1971
        },
        {
            "crude price": 2.48,
            "crude price (inflation adjusted)": 14.05,
            "crude price (inflation and intensity adjusted)": 14.44,
            "year": 1972
        },
        {
            "crude price": 3.29,
            "crude price (inflation adjusted)": 17.54,
            "crude price (inflation and intensity adjusted)": 18.03,
            "year": 1973
        },
        {
            "crude price": 11.58,
            "crude price (inflation adjusted)": 55.61,
            "crude price (inflation and intensity adjusted)": 55.15,
            "year": 1974
        },
        {
            "crude price": 11.53,
            "crude price (inflation adjusted)": 50.74,
            "crude price (inflation and intensity adjusted)": 49.39,
            "year": 1975
        },
        {
            "crude price": 12.8,
            "crude price (inflation adjusted)": 53.26,
            "crude price (inflation and intensity adjusted)": 52.82,
            "year": 1976
        },
        {
            "crude price": 13.92,
            "crude price (inflation adjusted)": 54.38,
            "crude price (inflation and intensity adjusted)": 54.44,
            "year": 1977
        },
        {
            "crude price": 14.02,
            "crude price (inflation adjusted)": 50.91,
            "crude price (inflation and intensity adjusted)": 47.26,
            "year": 1978
        },
        {
            "crude price": 31.61,
            "crude price (inflation adjusted)": 103.07,
            "crude price (inflation and intensity adjusted)": 90.79,
            "year": 1979
        },
        {
            "crude price": 36.83,
            "crude price (inflation adjusted)": 105.81,
            "crude price (inflation and intensity adjusted)": 86.5,
            "year": 1980
        },
        {
            "crude price": 35.93,
            "crude price (inflation adjusted)": 93.57,
            "crude price (inflation and intensity adjusted)": 69.48,
            "year": 1981
        },
        {
            "crude price": 32.97,
            "crude price (inflation adjusted)": 80.88,
            "crude price (inflation and intensity adjusted)": 57.87,
            "year": 1982
        },
        {
            "crude price": 29.55,
            "crude price (inflation adjusted)": 70.24,
            "crude price (inflation and intensity adjusted)": 47.68,
            "year": 1983
        },
        {
            "crude price": 28.78,
            "crude price (inflation adjusted)": 65.58,
            "crude price (inflation and intensity adjusted)": 42.95,
            "year": 1984
        },
        {
            "crude price": 27.56,
            "crude price (inflation adjusted)": 60.64,
            "crude price (inflation and intensity adjusted)": 37.94,
            "year": 1985
        },
        {
            "crude price": 14.43,
            "crude price (inflation adjusted)": 31.17,
            "crude price (inflation and intensity adjusted)": 19.63,
            "year": 1986
        },
        {
            "crude price": 18.44,
            "crude price (inflation adjusted)": 38.43,
            "crude price (inflation and intensity adjusted)": 23.87,
            "year": 1987
        },
        {
            "crude price": 14.92,
            "crude price (inflation adjusted)": 29.86,
            "crude price (inflation and intensity adjusted)": 18.55,
            "year": 1988
        },
        {
            "crude price": 18.23,
            "crude price (inflation adjusted)": 34.8,
            "crude price (inflation and intensity adjusted)": 20.83,
            "year": 1989
        },
        {
            "crude price": 23.73,
            "crude price (inflation adjusted)": 42.98,
            "crude price (inflation and intensity adjusted)": 24.78,
            "year": 1990
        },
        {
            "crude price": 20,
            "crude price (inflation adjusted)": 34.76,
            "crude price (inflation and intensity adjusted)": 19.61,
            "year": 1991
        },
        {
            "crude price": 19.32,
            "crude price (inflation adjusted)": 32.6,
            "crude price (inflation and intensity adjusted)": 18.15,
            "year": 1992
        },
        {
            "crude price": 16.97,
            "crude price (inflation adjusted)": 27.8,
            "crude price (inflation and intensity adjusted)": 15.19,
            "year": 1993
        },
        {
            "crude price": 15.82,
            "crude price (inflation adjusted)": 25.27,
            "crude price (inflation and intensity adjusted)": 13.62,
            "year": 1994
        },
        {
            "crude price": 17.02,
            "crude price (inflation adjusted)": 26.44,
            "crude price (inflation and intensity adjusted)": 13.83,
            "year": 1995
        },
        {
            "crude price": 20.67,
            "crude price (inflation adjusted)": 31.19,
            "crude price (inflation and intensity adjusted)": 16.28,
            "year": 1996
        },
        {
            "crude price": 19.09,
            "crude price (inflation adjusted)": 28.16,
            "crude price (inflation and intensity adjusted)": 14.26,
            "year": 1997
        },
        {
            "crude price": 12.72,
            "crude price (inflation adjusted)": 18.47,
            "crude price (inflation and intensity adjusted)": 9.12,
            "year": 1998
        },
        {
            "crude price": 17.97,
            "crude price (inflation adjusted)": 25.54,
            "crude price (inflation and intensity adjusted)": 12.38,
            "year": 1999
        },
        {
            "crude price": 28.5,
            "crude price (inflation adjusted)": 39.18,
            "crude price (inflation and intensity adjusted)": 18.43,
            "year": 2000
        },
        {
            "crude price": 24.44,
            "crude price (inflation adjusted)": 32.67,
            "crude price (inflation and intensity adjusted)": 15.22,
            "year": 2001
        },
        {
            "crude price": 25.02,
            "crude price (inflation adjusted)": 32.92,
            "crude price (inflation and intensity adjusted)": 15.08,
            "year": 2002
        },
        {
            "crude price": 28.83,
            "crude price (inflation adjusted)": 37.09,
            "crude price (inflation and intensity adjusted)": 16.82,
            "year": 2003
        },
        {
            "crude price": 38.27,
            "crude price (inflation adjusted)": 47.96,
            "crude price (inflation and intensity adjusted)": 21.79,
            "year": 2004
        },
        {
            "crude price": 54.52,
            "crude price (inflation adjusted)": 66.09,
            "crude price (inflation and intensity adjusted)": 29.16,
            "year": 2005
        },
        {
            "crude price": 65.14,
            "crude price (inflation adjusted)": 76.49,
            "crude price (inflation and intensity adjusted)": 32.56,
            "year": 2006
        },
        {
            "crude price": 72.39,
            "crude price (inflation adjusted)": 82.65,
            "crude price (inflation and intensity adjusted)": 34.49,
            "year": 2007
        },
        {
            "crude price": 97.26,
            "crude price (inflation adjusted)": 106.94,
            "crude price (inflation and intensity adjusted)": 42.18,
            "year": 2008
        },
        {
            "crude price": 61.67,
            "crude price (inflation adjusted)": 68.05,
            "crude price (inflation and intensity adjusted)": 26.28,
            "year": 2009
        },
        {
            "crude price": 79.5,
            "crude price (inflation adjusted)": 86.31,
            "crude price (inflation and intensity adjusted)": 33.17,
            "year": 2010
        },
        {
            "crude price": 111.26,
            "crude price (inflation adjusted)": 117.1,
            "crude price (inflation and intensity adjusted)": 43.49,
            "year": 2011
        },
        {
            "crude price": 111.67,
            "crude price (inflation adjusted)": 115.14,
            "crude price (inflation and intensity adjusted)": 40.9,
            "year": 2012
        },
        {
            "crude price": 108.66,
            "crude price (inflation adjusted)": 110.42,
            "crude price (inflation and intensity adjusted)": 39.03,
            "year": 2013
        },
        {
            "crude price": 98.95,
            "crude price (inflation adjusted)": 98.95,
            "crude price (inflation and intensity adjusted)": 34.37,
            "year": 2014
        },
        {
            "crude price": 50,
            "crude price (inflation adjusted)": 50,
            "crude price (inflation and intensity adjusted)": 18.37,
            "year": 2015
        }
    ],
    "datamap": {
        "base": "year",
        "custom": {},
        "facet": null,
        "ignore": [],
        "scale": null,
        "series": [
            "crude price",
            "crude price (inflation adjusted)",
            "crude price (inflation and intensity adjusted)"
        ],
        "sort": [
            "year",
            "crude price",
            "crude price (inflation adjusted)",
            "crude price (inflation and intensity adjusted)"
        ],
        "value": null
    },
    "embed": {
        "dimensions": {
            "double": {
                "height": 424,
                "width": 620
            },
            "single": {
                "height": 421,
                "width": 300
            }
        }
    },
    "margins": {
        "double": {
            "bottom": 0.07999999999999996,
            "left": 0.05,
            "right": 0.020000000000000018,
            "top": 0.06
        },
        "single": {
            "bottom": 0.10999999999999999,
            "left": 0.11,
            "right": 0.020000000000000018,
            "top": 0.05
        }
    },
    "scripts": {
        "dependencies": {
            "scripts": [
                "https://cdnjs.cloudflare.com/ajax/libs/d3/4.2.3/d3.min.js"
            ],
            "styles": []
        },
        "draw": "function draw(){\n\n    var initialProps = {\n        dims: {\n          single: { width: 300, height: 225 },\n          double: { width: 620, height: 300}\n        },\n    };\n    \n    // Returns object with properties and methods representing\n    // dimensions, scales, axes, etc.\n    var werk = werkHelper.build(initialProps);\n    \n    \n    var line = d3.line()\n        .defined(function(d){ return !isNaN(d.y);})\n        .x(function(d) { return werk.scales.x(d.x); })\n        .y(function(d) { return werk.scales.y(d.y); });\n    \n    var svg = d3.select(\"#chart\")\n        .append(\"svg\")\n        .style(\"background-color\",\"transparent\")\n        .attr(\"width\", werk.dims.svg.width + werk.dims.margins.left + werk.dims.margins.right)\n        .attr(\"height\", werk.dims.svg.height + werk.dims.margins.top + werk.dims.margins.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + werk.dims.margins.left + \",\" + werk.dims.margins.top + \")\");\n\n    chartwerk.axes.base.shadedRegions.forEach(function(shade) {\n        var rectLeft = werk.scales.x(werk.parsers.base(shade.min));\n        var rectRight = werk.scales.x(werk.parsers.base(shade.max));\n        var minWidth = 2;\n        var width = Math.max(2, rectRight - rectLeft);\n        if (rectRight === rectLeft) {\n            svg.append('line')\n                .attr(\"class\",'solid-line')\n                .attr(\"y1\", 0)\n                .attr(\"y2\", werk.scales.y.range()[0])\n                .attr(\"x1\", rectLeft)\n                .attr(\"x2\", rectLeft);\n        } else {\n            svg.append('rect')\n                .attr(\"class\",\"shaded-area\")\n                .attr('y', 0)\n                .attr('x', rectLeft)\n                .attr('width', width)\n                .attr('height', werk.scales.y.range()[0]); \n        }\n    });\n    \n    chartwerk.axes.value.shadedRegions.forEach(function(shade) {\n        var rectMin = werk.scales.y(werk.parsers.value(shade.min));\n        var rectMax = werk.scales.y(werk.parsers.value(shade.max));\n        var height = Math.max(2, rectMin - rectMax);\n        if (rectMin === rectMax) {\n            svg.append('line')\n                .attr(\"class\",'dotted-line')\n                .attr(\"x1\", 0)\n                .attr(\"x2\", werk.scales.x.range()[1])\n                .attr(\"y1\", rectMin)\n                .attr(\"y2\", rectMin);\n        } else {\n            svg.append('rect')\n                .attr(\"class\",\"shaded-area\")\n                .attr('x', 0)\n                .attr('y', rectMax)\n                .attr('width', werk.scales.x.range()[1])\n                .attr('height', height); \n        }\n    });\n    \n\n    svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(werk.axes.y)\n      .append(\"text\")\n        .attr(\"class\",\"label\")\n        .attr(\"y\", -werk.dims.margins.top + 15)\n        .attr(\"x\", -werk.dims.margins.left)\n        .style(\"text-anchor\", \"start\")\n        .text(chartwerk.axes.value.label);\n    \n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + werk.dims.svg.height + \")\")\n        .call(werk.axes.x);\n    \n    \n    var series = svg.selectAll(\".series\")\n        .data(werk.data)\n      .enter().append(\"g\")\n        .attr(\"class\",\"series\");\n    \n    series.append(\"path\")\n    \t\t.attr(\"class\",\"line\")\n    \t\t.attr(\"d\", function(d){ return line(d.values);})\n    \t\t.style(\"stroke\", function(d){ return werk.scales.color(d.name);});\n    \n    //A rect to catch mouse movements\n    var pointerRect = svg.append(\"rect\")\n    \t.attr(\"height\", werk.dims.svg.height)\n    \t.attr(\"width\", werk.dims.svg.width)\n    \t.style(\"fill\",\"none\")\n    \t.style(\"pointer-events\", \"fill\")\n        .on(\"mouseout\",  hideTooltip)\n        .on(\"mousemove\", showTooltip);\n    \n    \n    \n    var tooltip = d3.select(\"#chart\")\n      .append(\"div\")\n        .attr(\"class\",\"tooltip\")\n        .style(\"position\",\"absolute\");\n    tooltip\n      .append(\"div\")\n      .attr(\"class\",\"value\");\n    \n    var trackCirc = svg.append(\"circle\")\n\t\t.attr(\"cx\",0)\n\t\t.attr(\"cy\",0)\n\t\t.attr(\"r\",4)\n\t\t.style(\"fill\",\"none\")\n\t\t.style(\"stroke-width\",2)\n\t\t.style(\"display\",\"none\")\n        .style(\"pointer-events\", \"none\");\n      \n    function hideTooltip(){\n        d3.select(\".tooltip\")\n          .style(\"opacity\", 0);\n        trackCirc\n          .style(\"display\", \"none\");\n    }\n    \n    function showTooltip(){\n        var x0 = werk.scales.x.invert(d3.mouse(this)[0]),\n    \t\ty0 = werk.scales.y.invert(d3.mouse(this)[1]),\n    \n    \t\t//Start dist at a max number so we can check all distances less than\n    \t\tdist = werk.dataDims.xMax - werk.dataDims.xMin + werk.dataDims.yMax - werk.dataDims.yMin,\n    \t\tnearestX = 0,\n    \t\tnearestY = 0,\n    \t\tcolorGroup = \"\",\n    \t\tcomma = d3.format(\",\");\n    \n    \twerk.data.forEach(function(series){\n    \t\tseries.values.forEach(function(d){\n    \t\t\tif(Math.abs(x0 - d.x) + Math.abs(y0 - d.y)  < dist){\n    \t\t\t\tnearestX = d.x\n    \t\t\t\tnearestY = d.y\n    \t\t\t\tcolorGroup = series.name\n    \t\t\t\tdist = Math.abs(x0 - d.x) + Math.abs(y0 - d.y)\n    \t\t\t}\n    \t\t})\n    \n    \t});\n\n\n\t    trackCirc\n\t\t\t.attr(\"cx\", werk.scales.x(nearestX))\n\t\t\t.attr(\"cy\", werk.scales.y(nearestY))\n\t\t\t.style(\"stroke\",\"#333\")\n\t\t\t.style(\"display\",\"\");\n\t\t\n        d3.select(\".tooltip .value\")\n          .style(\"color\", werk.scales.color(colorGroup))\n          .text(function(){\n              var v = chartwerk.axes.value;\n              return v.prefix + comma(nearestY) + v.suffix;\n          });\n        var p = d3.mouse(this.parentElement.parentElement);\n        d3.select(\".tooltip\")\n            .style(\"opacity\", 1)\n            .style(\"top\", function(){\n                var s = chartwerk.ui.size,\n                    h = werk.dims[s].height,\n                    tipH = parseInt(d3.select(\".tooltip\").style(\"height\"), 10),\n                    pos = p[1] > (h / 2) ?\n                        p[1] - 20 : p[1] + 10;\n                return pos.toString() + \"px\";\n            })\n            .style(\"left\", function(){\n                // We position either left or right of the mouse point based\n                // on whether we're past the midpoint of the chart. This protects\n                // against tooltips overflowing embedded iframes.\n                var s = chartwerk.ui.size,\n                    w = werk.dims[s].width,\n                    tipW = parseInt(d3.select(\".tooltip\").style(\"width\"), 10),\n                    pos = p[0] > (w / 2) ?\n                        p[0] - (tipW + 20) : p[0] + 20;\n                return pos.toString() + \"px\";\n            });\n    }\n}",
        "helper": "var werkHelper = {\n    parse: function(werk){\n        werk.parsers = {\n          base: d3.timeParse( chartwerk.axes.base.dateFormat ),\n          value: function(d){ return d === '' ? NaN : +d; }\n        };\n        \n        werk.data = chartwerk.axes.color.domain.map(function(category){\n            return {\n                name: category,\n                values: chartwerk.data.map(function(d){\n                    return {\n                        x: werk.parsers.base(\n                            String(d[chartwerk.datamap.base])\n                        ),\n                        y: werk.parsers.value(d[category])\n                    };\n                })\n                .sort(function(a, b){ return d3.ascending(a.x, b.x); })\n            };\n        });\n        \n        // Get max and min of data \n        var xMax = d3.max(werk.data,function(series){return d3.max(series.values,function(d){return d.x; }); }),\n\t        xMin = d3.min(werk.data,function(series){return d3.min(series.values,function(d){return d.x; }); }),\n\t        yMax = d3.max(werk.data,function(series){return d3.max(series.values,function(d){return d.y; }); }),\n\t        yMin = d3.min(werk.data,function(series){return d3.min(series.values,function(d){return d.y; }); });\n        \n        werk.dataDims = {\n            xMin: xMin,\n            xMax: xMax,\n            yMin: yMin,\n            yMax: yMax\n        };\n    },\n    \n    dims: function(werk){\n        var s = chartwerk.ui.size;\n            w = werk.dims[s].width,\n            h = werk.dims[s].height,\n            margins = {\n                right: chartwerk.margins[s].right * w,\n                left: chartwerk.margins[s].left * w,\n                top: chartwerk.margins[s].top * h,\n                bottom: chartwerk.margins[s].bottom * h\n            },\n            svg = {\n                width: w - margins.left - margins.right,\n                height: h - margins.top - margins.bottom\n            };\n        \n        werk.dims.margins = margins;\n        werk.dims.svg = svg;\n    },\n\n    scales: function(werk){\n        var svg = werk.dims.svg;\n        werk.scales = {\n            x: d3.scaleTime()\n                .range([0, svg.width]),\n            y: d3.scaleLinear()\n                .range([svg.height, 0]),\n            color: chartwerk.axes.color.range.length > 1 ? \n                d3.scaleOrdinal()\n                  .domain(chartwerk.axes.color.domain)\n                  .range(chartwerk.axes.color.range) \n            :   function(d){return chartwerk.axes.color.range[0];},\n        };\n    },\n    \n    baseDomain:  function(werk){\n        var xMax = d3.max(werk.data, function(category) {\n                return d3.max(category.values, function(d){\n                    return d.x; \n                }); \n            }),\n            xMin = d3.min(werk.data, function(category) { \n                return d3.min(category.values, function(d){ \n                    return d.x;\n                });\n            });\n        werk.scales.x.domain([xMin, xMax]);\n    },\n\n    valueDomain: function(werk){\n        var yMax = d3.max(werk.data, function(category) { \n                return d3.max(category.values, function(d){ \n                    return d.y; \n                }); \n            }),\n            yMin = d3.min(werk.data, function(category) {\n                return d3.min(category.values, function(d){ \n                    return d.y; \n                }); \n            });\n        \n        if (chartwerk.axes.value.min && chartwerk.axes.value.max) {\n            werk.scales.y.domain(\n                [chartwerk.axes.value.min, chartwerk.axes.value.max]\n            );\n        } else if (chartwerk.axes.value.min) {\n            werk.scales.y.domain(\n                [chartwerk.axes.value.min, yMax ]\n            );\n        } else if (chartwerk.axes.value.max) {\n            werk.scales.y.domain(\n                [yMin, chartwerk.axes.value.max]\n            );\n        } else {\n            werk.scales.y.domain([yMin, yMax]);\n        }\n        \n        werk.scales.y.nice();\n    },\n\n    axes: function(werk){\n        werk.axes = {\n          x: d3.axisBottom(werk.scales.x)\n              .tickSizeInner(6)\n              .tickSizeOuter(0)\n              .tickPadding(3),\n          y: d3.axisLeft(werk.scales.y)\n              .tickSizeInner(-werk.dims.svg.width)\n              .tickSizeOuter(0)\n              .tickPadding(7)\n              .tickFormat( function(d){ \n                var formatter = werk.scales.y.tickFormat();\n                if (d >= 0) {\n                  return formatter(d) === '0' ? '0' : \n                  chartwerk.axes.value.prefix + formatter(d) + chartwerk.axes.value.suffix;\n                } else {\n                  return \"-\" + chartwerk.axes.value.prefix + formatter(Math.abs(d)) + chartwerk.axes.value.suffix;\n                }\n              }),\n        };\n    },\n\n    baseTicks: function(werk){\n        if (chartwerk.axes.base.type !== 'date') {\n            return;\n        }\n        \n        // Abstract this to a separate file once formats settled.\n        var customLocale = {\n          \"dateTime\": \"%x, %X\",\n          \"date\": \"%-m/%-d/%Y\",\n          \"time\": \"%-I:%M:%S %p\",\n          \"periods\": [\"AM\", \"PM\"],\n          \"days\": [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n          \"shortDays\": [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n          \"months\": [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n          \"shortMonths\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        }\n        \n        d3.timeFormatDefaultLocale(customLocale);\n        \n        \n        var formatMillisecond = d3.timeFormat(\".%L\"),\n            formatSecond = d3.timeFormat(\":%S\"),\n            formatMinute = d3.timeFormat(\"%I:%M\"),\n            formatHour = d3.timeFormat(\"%I %p\"),\n            formatDay = d3.timeFormat(\"%a %d\"),\n            formatWeek = d3.timeFormat(\"%b %d\"),\n            formatMonth = d3.timeFormat(\"%B\"),\n            formatYear = d3.timeFormat(\"%Y\");\n        \n        \n        var s = chartwerk.ui.size;\n        var dateTick;\n        switch(chartwerk.axes.base.format[s].dateString) {\n            case 'Y':\n                dateTick = d3.timeYear;\n                formatYear = d3.timeFormat(\"%Y\");\n                break;\n            case 'y':\n                dateTick = d3.timeYear;\n                formatYear = d3.timeFormat(\"'%y\");\n                break;\n            case 'M':\n                dateTick = d3.timeMonth;\n                formatMonth = d3.timeFormat(\"%B\");\n                formatYear = d3.timeFormat(\"Jan. '%y\");\n                break;\n            case 'm':\n                dateTick = d3.timeMonth;\n                formatMonth = d3.timeFormat(\"%b.\");\n                formatYear = d3.timeFormat(\"J/%y\");\n                break;\n            case 'W':\n            case 'w':\n                dateTick = d3.timeWeek;\n                formatMonth = d3.timeFormat(\"%b.\");\n                formatYear = d3.timeFormat(\"J/%y\");\n                break;\n            case 'D':\n                dateTick = d3.timeDay;\n                formatMonth = d3.timeFormat(\"%b.\");\n                formatYear = d3.timeFormat(\"J/%y\");\n        }\n        \n        function multiFormat(date) {\n          return (d3.timeSecond(date) < date ? formatMillisecond\n              : d3.timeMinute(date) < date ? formatSecond\n              : d3.timeHour(date) < date ? formatMinute\n              : d3.timeDay(date) < date ? formatHour\n              : d3.timeMonth(date) < date ? (d3.timeWeek(date) < date ? formatDay : formatWeek)\n              : d3.timeYear(date) < date ? formatMonth\n              : formatYear)(date);\n        }\n        \n        werk.axes.x.tickFormat(multiFormat)\n        \n        werk.axes.x.ticks(\n            dateTick.every( chartwerk.axes.base.format[s].frequency )\n        );\n    },\n\n    valueTicks: function(werk){\n        var s = chartwerk.ui.size;\n        if (chartwerk.axes.value.format[s].customTicks.length > 0) { \n            werk.axes.y.tickValues(\n                chartwerk.axes.value.format[s].customTicks\n            );\n        } else {\n            werk.axes.y.ticks(\n              chartwerk.axes.value.format[s].ticks\n            );\n        }\n    },\n\n    // Build dims, scales and axes.\n    build: function(werk){\n        this.parse(werk);\n        this.dims(werk);\n        this.scales(werk);\n        this.baseDomain(werk);\n        this.valueDomain(werk);\n        this.axes(werk);\n        this.baseTicks(werk);\n        this.valueTicks(werk);\n        return werk;\n    },\n};",
        "html": "<div id='chart-header'>\n\t<h2 id='headline'></h2>\n\t<div id='chatter'></div> \n</div> \n<div id='chart-ui'>\n\t<!--You can put any necessary buttons, etc., here.-->\n</div>\n<div id='chart-legend'></div>\n<div id='chart'></div> \n<div id='chart-footer'> \n\t<div id='footnote'></div> \n\t<div id='source'></div> \n\t<div id='author'></div> \n</div>",
        "styles": "#chartwerk {\n    font-family:'Theinhardt-Regular', sans-serif; \n    width:620px;\n}\n#chartwerk.single{\n    width:300px;\n    max-width:100%;\n    overflow:hidden;\n    margin:0;\n}\n#chartwerk #headline {\n    font-family:'Theinhardt-Medium', sans-serif;\n    font-weight:normal;\n    font-size:24px;\n}\n#chartwerk #chatter {\n    font-size:14px;\n    line-height:19px;\n    margin:5px 0 10px;\n}\n#chartwerk #footnote,\n#chartwerk #source,\n#chartwerk #author {\n    font-size:11px;\n    color:grey;\n\n}\n#chartwerk #author {\n    text-align:right;\n}\n#chartwerk #chart{\n    background-color:white;\n}\n#chartwerk #chart-legend \n.chart-legend-container .key-label{\n    font:11px 'Theinhardt-Regular', sans-serif;\n}\n#chartwerk #chart-legend \n.chart-legend-container .key-color{\n    margin-right:2px;\n}\n#chartwerk #chart-legend \n.chart-legend-container .key{\n    margin-right:8px;\n}\n#chartwerk .annotation p{\n    font-family:'Theinhardt-Regular', sans-serif; \n}\n#chartwerk #chart .tooltip{\n    font: 13px 'Theinhardt-Regular', sans-serif; \n    opacity:0;\n    pointer-events:none;\n    background:rgba(255,255,255,.75);\n    padding:5px;\n    width:auto;\n    z-index:2;\n}\n#chartwerk #chart .tooltip .value{\n    font-family: 'Theinhardt-Medium', sans-serif;\n    font-weight: normal;\n}\n\n#chartwerk #chart path.line{\n    fill: none;\n    stroke-width: 2px;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: rgb(180,180,180);\n  shape-rendering: crispEdges;\n}\n.axis text{\n    font-family: 'Theinhardt-Regular', sans-serif;\n    fill: rgb(132,132,132);\n    font-size:11px;\n}\n.y.axis line{\n    stroke-dasharray: 3px 3px;\n}\n.y.axis path{\n    display:none;\n}\n.y.axis .label{\n    font-family: 'Theinhardt-Regular', sans-serif; \n    font-weight:normal;\n}\nline.dotted-line{\n    stroke:rgb(33,33,33);\n    stroke-width:1px;\n    stroke-dasharray: 7px 5px;\n}\nline.solid-line{\n    stroke:rgb(33,33,33);\n    stroke-width:1px;\n}\nrect.shaded-area{\n    fill:#ddd;\n}"
    },
    "template": {
        "description": "Line charts are used to show continuous data over time. Examples include stock prices, temperatures, indexes and rates.\n\nThe X axis (base axis) on a line chart always runs along a date range, for example, 1992 to 2012. \n\nYour data should include one column of dates. Check out the available date formats on the Axes tab, and format your dates in your spreadsheet according to one of these.\n\nYou should have one column of data for each line in your chart.",
        "icon": null,
        "tags": [],
        "title": "Spectrum line chart"
    },
    "text": {
        "annotations": [
            {
                "align": "c",
                "background": true,
                "color": "#2d3035",
                "fontSize": "m",
                "size": "d",
                "text": "Oil is only about **3x** more expensive today than in 1970, not the **50x** more expensive it may appear",
                "w": 139,
                "x": 285,
                "y": 76
            },
            {
                "align": "l",
                "background": true,
                "color": "#2d3035",
                "fontSize": "m",
                "size": "s",
                "text": "Oil is only about **3x** more expensive today",
                "w": 83,
                "x": 131,
                "y": 27
            }
        ],
        "author": "Josh Romero/IEEE Spectrum",
        "chatter": "To make historical comparisons, it's important to adjust for both inflation and intensity of use.",
        "footnote": "",
        "headline": "The Real Cost of Oil",
        "legend": {
            "active": true,
            "double": {
                "align": "l",
                "background": true,
                "inside": false,
                "position": {
                    "x": 10,
                    "y": 10
                },
                "width": 500
            },
            "keys": [
                {
                    "color": "#A7A7A7",
                    "text": ""
                },
                {
                    "color": "#7A7A7A",
                    "text": ""
                },
                {
                    "color": "#D40A06",
                    "text": ""
                }
            ],
            "single": {
                "align": "l",
                "background": true,
                "inside": false,
                "position": {
                    "x": 10,
                    "y": 10
                },
                "width": 185.39999999999998
            },
            "title": ""
        },
        "source": "Sources: BP Statistical Review of Energy; U.S. Energy Information Administration; US Bureau of Labor",
        "title": "The Real Cost of Oil"
    },
    "ui": {
        "datamap": [
            {
                "alias": "X axis",
                "available": true,
                "class": "base"
            },
            {
                "alias": "value axis",
                "available": false,
                "class": "value"
            },
            {
                "alias": "scale axis",
                "available": false,
                "class": "scale"
            },
            {
                "alias": "Y axis",
                "available": true,
                "class": "series"
            },
            {
                "alias": "faceting column",
                "available": false,
                "class": "facet"
            },
            {
                "alias": "ignored column",
                "available": false,
                "class": "ignore"
            }
        ],
        "rawData": "year\tcrude price\tcrude price (inflation adjusted)\tcrude price (inflation and intensity adjusted)\n1970\t1.8\t10.98\t10.98\n1971\t2.24\t13.09\t13.11\n1972\t2.48\t14.05\t14.44\n1973\t3.29\t17.54\t18.03\n1974\t11.58\t55.61\t55.15\n1975\t11.53\t50.74\t49.39\n1976\t12.8\t53.26\t52.82\n1977\t13.92\t54.38\t54.44\n1978\t14.02\t50.91\t47.26\n1979\t31.61\t103.07\t90.79\n1980\t36.83\t105.81\t86.5\n1981\t35.93\t93.57\t69.48\n1982\t32.97\t80.88\t57.87\n1983\t29.55\t70.24\t47.68\n1984\t28.78\t65.58\t42.95\n1985\t27.56\t60.64\t37.94\n1986\t14.43\t31.17\t19.63\n1987\t18.44\t38.43\t23.87\n1988\t14.92\t29.86\t18.55\n1989\t18.23\t34.8\t20.83\n1990\t23.73\t42.98\t24.78\n1991\t20\t34.76\t19.61\n1992\t19.32\t32.6\t18.15\n1993\t16.97\t27.8\t15.19\n1994\t15.82\t25.27\t13.62\n1995\t17.02\t26.44\t13.83\n1996\t20.67\t31.19\t16.28\n1997\t19.09\t28.16\t14.26\n1998\t12.72\t18.47\t9.12\n1999\t17.97\t25.54\t12.38\n2000\t28.5\t39.18\t18.43\n2001\t24.44\t32.67\t15.22\n2002\t25.02\t32.92\t15.08\n2003\t28.83\t37.09\t16.82\n2004\t38.27\t47.96\t21.79\n2005\t54.52\t66.09\t29.16\n2006\t65.14\t76.49\t32.56\n2007\t72.39\t82.65\t34.49\n2008\t97.26\t106.94\t42.18\n2009\t61.67\t68.05\t26.28\n2010\t79.5\t86.31\t33.17\n2011\t111.26\t117.1\t43.49\n2012\t111.67\t115.14\t40.9\n2013\t108.66\t110.42\t39.03\n2014\t98.95\t98.95\t34.37\n2015\t50\t50\t18.37",
        "size": "double"
    }
}