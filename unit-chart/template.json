{
    "axes": {
        "base": {
            "dateFormat": null,
            "format": {
                "double": {
                    "customTicks": [],
                    "dateString": "Y",
                    "frequency": 1,
                    "ticks": 7
                },
                "single": {
                    "customTicks": [],
                    "dateString": "Y",
                    "frequency": 2,
                    "ticks": 7
                }
            },
            "label": "",
            "max": null,
            "min": null,
            "prefix": "",
            "shadedRegions": [],
            "suffix": "",
            "type": "categorical"
        },
        "color": {
            "byFacet": false,
            "domain": [
                "Criminal Records",
                "Noncriminal Records",
                "Unknown"
            ],
            "ignoreScale": false,
            "quantize": false,
            "quantizeProps": {
                "column": null,
                "groups": 0,
                "reverseColors": false
            },
            "range": [
                "#D40A06",
                "#48B44C",
                "#C9C9C9"
            ],
            "scheme": "categorical.default"
        },
        "scale": {
            "prefix": "",
            "suffix": ""
        },
        "value": {
            "format": {
                "double": {
                    "customTicks": [],
                    "ticks": 7
                },
                "single": {
                    "customTicks": [],
                    "ticks": 7
                }
            },
            "label": "",
            "max": null,
            "min": null,
            "prefix": "",
            "shadedRegions": [],
            "suffix": ""
        }
    },
    "data": [
        {
            "Number": 8,
            "Type": "Criminal Records"
        },
        {
            "Number": 12,
            "Type": "Unknown"
        },
        {
            "Number": 80,
            "Type": "Noncriminal Records"
        }
    ],
    "datamap": {
        "base": null,
        "custom": {},
        "facet": null,
        "ignore": [],
        "scale": "Type",
        "series": [],
        "sort": [
            "Type",
            "Number"
        ],
        "value": "Number"
    },
    "embed": {
        "dimensions": {
            "double": {
                "height": 376,
                "width": 620
            },
            "single": {
                "height": 441,
                "width": 300
            }
        }
    },
    "margins": {
        "double": {
            "bottom": 0,
            "left": 0,
            "right": 0,
            "top": 0
        },
        "single": {
            "bottom": 0,
            "left": 0,
            "right": 0,
            "top": 0
        }
    },
    "scripts": {
        "dependencies": {
            "scripts": [
                "https://cdnjs.cloudflare.com/ajax/libs/d3/4.2.3/d3.min.js"
            ],
            "styles": []
        },
        "draw": "function draw(){\n\n    var size = chartwerk.ui.size;\n\n    var VALUE_KEY = chartwerk.datamap.value;\n    var UNIT_SPACING = 4;\n    var UNITS_PER_ROW = size === 'double' ? 18 : 12;\n    var CHART_WIDTH = size === 'double' ? 620 : 300;\n    \n    var unitSize = ((CHART_WIDTH) / UNITS_PER_ROW) - UNIT_SPACING;\n    var totalUnits = chartwerk.data.reduce(function(m, d) {\n        return m + d[VALUE_KEY];\n    }, 0);\n    \n    var chartHeight = Math.ceil(totalUnits / UNITS_PER_ROW) * (UNIT_SPACING + unitSize);\n\n    var werk = werkHelper.build({\n        dims: {\n          single: {\n            width: CHART_WIDTH,\n            height: chartHeight\n          },\n          double: {\n            width: CHART_WIDTH,\n            height: chartHeight\n          }\n        }\n    });\n\n    var svg = d3.select('#chart')\n        .append('svg')\n        .attr('width', werk.dims.svg.width + werk.dims.margins.left + werk.dims.margins.right)\n        .attr('height', werk.dims.svg.height + werk.dims.margins.top + werk.dims.margins.bottom)\n      .append('g')\n        .attr('transform', 'translate(' + werk.dims.margins.left + ',' + werk.dims.margins.top + ')');\n\n    var i = 0;\n    var data = chartwerk.data.map(function(d) {\n      return d3.range(d[VALUE_KEY]).map(function() {\n        var e = JSON.parse(JSON.stringify(d));\n        e.idx = i++;\n        return e;\n      });\n    });\n    \n    var facets = svg.selectAll('.facet')\n      .data(data)\n      .enter().append('g')\n      .attr('class', 'facet');\n    \n    facets.selectAll('.unit')\n      .data(function(d) {\n        return d;\n      })\n      .enter()\n      .append('rect')\n      .attr('class', 'unit')\n      .attr('width', unitSize)\n      .attr('height', unitSize)\n      .attr('fill', function(d) {\n        return werk.scales.color(d[chartwerk.datamap.scale]);\n      })\n      .attr('x', function(d) {\n        return d.idx % UNITS_PER_ROW * (unitSize + UNIT_SPACING);\n      })\n      .attr('y', function(d) {\n        return Math.floor(d.idx / UNITS_PER_ROW) * (unitSize + UNIT_SPACING);\n      });\n\n  facets\n    .on('mouseover', function(d) {\n      var highlighted = d3.select(this).classed('highlight', true);\n      d3.select('.tooltip .title').text(d[0][chartwerk.datamap.scale]);\n      d3.select('.tooltip .value').text(d[0][VALUE_KEY]);\n\n      highlighted.selectAll('.unit')\n        .attr('stroke', d3.rgb(werk.scales.color(d[0][chartwerk.datamap.scale])).darker())\n        .attr('stroke-width', 2)\n      \n      tooltip.style('opacity', 1);\n    })\n    .on('mouseout', function(d) {\n      d3.select(this)\n        .classed('highlight', false)\n        .selectAll('.unit')\n          .attr('stroke-width', 0);\n      \n      tooltip.style('opacity', 0);\n    })\n    .on('mousemove', function(d) {\n      tooltip\n        .style(\"left\", (d3.event.pageX + 10) + \"px\")\n        .style(\"top\", (d3.event.pageY + 30 - d3.select('#chart').node().offsetTop) + \"px\");\n    });\n\n    var tooltip = d3.select(\"#chart\")\n      .append(\"div\")\n        .attr(\"class\",\"tooltip\")\n        .style(\"position\",\"absolute\");\n    tooltip\n      .append(\"div\")\n      .attr(\"class\",\"title\")\n      .text(chartwerk.datamap.scale);\n    tooltip\n      .append(\"div\")\n      .attr(\"class\",\"value\");\n}",
        "helper": "var werkHelper = {\n    dims: function(werk){\n        var s = chartwerk.ui.size;\n            w = werk.dims[s].width,\n            h = werk.dims[s].height,\n            margins = {\n                right: chartwerk.margins[s].right * w,\n                left: chartwerk.margins[s].left * w,\n                top: chartwerk.margins[s].top * h,\n                bottom: chartwerk.margins[s].bottom * h\n            },\n            svg = {\n                width: w - margins.left - margins.right,\n                height: h + 2 - margins.top - margins.bottom\n            };\n        \n        werk.dims.margins = margins;\n        werk.dims.svg = svg;\n    },\n    \n    scales: function(werk){\n        var svg = werk.dims.svg;\n        werk.scales = {\n            color: chartwerk.axes.color.quantize ? \n                d3.scaleQuantize() : d3.scaleOrdinal(),\n        };\n        \n        werk.scales.color\n            .domain(chartwerk.axes.color.domain)\n            .range(chartwerk.axes.color.range);\n    },\n\n    // Build dims, scales and axes.\n    build: function(werk){\n        this.dims(werk);\n        this.scales(werk);\n        return werk;\n    },\n};",
        "html": "<div id='chart-header'>\n\t<h2 id='headline'></h2>\n\t<div id='chatter'></div> \n</div> \n<div id='chart-ui'>\n\t<!--You can put any necessary buttons, etc., here.-->\n</div>\n<div id='chart-legend'></div>\n<div id='chart'></div> \n<div id='chart-footer'> \n\t<div id='footnote'></div> \n\t<div id='source'></div> \n\t<div id='author'></div> \n</div>",
        "styles": "\n#chartwerk {\n    font-family:'Theinhardt-Regular',sans-serif; \n    width:620px;\n}\n#chartwerk.single{\n    width:300px;\n    max-width:100%;\n    overflow:hidden;\n    margin:0;\n}\n#chartwerk #headline {\n    font-family:'Theinhardt-Medium',sans-serif; ;\n    font-weight:normal;\n    font-size:24px;\n    line-height: 1.2;\n}\n#chartwerk #chatter {\n    font-size:14px;\n    line-height:19px;\n    margin:5px 0 10px;\n}\n#chartwerk #footnote,\n#chartwerk #source,\n#chartwerk #author {\n    font-size:11px;\n    color:grey;\n}\n#chartwerk #author {\n    text-align:right;\n}\n#chartwerk #chart{\n    background-color:white;\n    margin:3px;\n}\n#chartwerk #chart-legend, #chartwerk .chart-legend-container {\n    font-family:'Theinhardt-Regular',sans-serif;\n    font-size:14px;\n    line-height:19px;\n}\n#chartwerk .chart-legend-container .title {\n    margin-bottom:5px;\n}\n#chartwerk .chart-legend-container .key-label{\n    font:11px 'Theinhardt-Regular',sans-serif;\n}\n#chartwerk .chart-legend-container .key-color{\n    margin-right:2px;\n}\n#chartwerk .chart-legend-container .key{\n    margin-right:8px;\n}\n#chartwerk .annotation p{\n    font-family:'Theinhardt-Regular',sans-serif; \n}\n#chartwerk #chart .tooltip{\n    font: 13px 'Theinhardt-Regular',sans-serif; \n    opacity:0;\n    pointer-events:none;\n    background:rgba(255,255,255,.75);\n    padding:5px;\n    width:auto;\n}\n#chartwerk #chart .tooltip .title{\n    font-family: 'Theinhardt-Medium',sans-serif;\n    font-weight: normal;\n    fill:grey;\n}\n.facet.highlight {\n    // stroke: #000;\n}"
    },
    "template": {
        "description": null,
        "icon": null,
        "tags": [],
        "title": "Unit chart"
    },
    "text": {
        "annotations": [],
        "author": "Josh Romero / IEEE Spectrum",
        "chatter": "The FBI\u2019s FACES face recognition database mostly contains images of law-abiding citizens taken from driver\u2019s license and passport photos.",
        "footnote": null,
        "headline": "Where the FBI Gets Its Photos",
        "legend": {
            "active": true,
            "double": {
                "align": "l",
                "background": true,
                "inside": false,
                "position": {
                    "x": 0,
                    "y": 0
                },
                "width": 354
            },
            "keys": [
                {
                    "color": "#D40A06",
                    "text": "criminal records"
                },
                {
                    "color": "#48B44C",
                    "text": "noncriminal records"
                },
                {
                    "color": "#C9C9C9",
                    "text": "unknown"
                }
            ],
            "single": {
                "align": "l",
                "background": true,
                "inside": false,
                "position": {
                    "x": 0,
                    "y": 0
                },
                "width": 294
            },
            "title": "% of images obtained from:"
        },
        "source": "Source: Center on Privacy and Technology, Georgetown Law",
        "title": "fbi-faces"
    },
    "ui": {
        "datamap": [
            {
                "alias": "base axis",
                "available": false,
                "class": "base"
            },
            {
                "alias": "Value",
                "available": true,
                "class": "value"
            },
            {
                "alias": "Color group",
                "available": true,
                "class": "scale"
            },
            {
                "alias": "data series",
                "available": false,
                "class": "series"
            },
            {
                "alias": "faceting column",
                "available": false,
                "class": "facet"
            },
            {
                "alias": "ignored column",
                "available": false,
                "class": "ignore"
            }
        ],
        "rawData": "Type,Number\nCriminal Records,8\nUnknown,12\nNoncriminal Records,80\n",
        "size": "single"
    }
}